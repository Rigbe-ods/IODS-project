setwd("~/GitHub/IODS-project")
math <- read.table("data/student-mat.csv", sep = ";" , header=TRUE)
por <- read.table("data/student-por.csv", sep = ";" , header=TRUE)
str(math)
str(por)
dim(math)
dim(por)
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
math_por <- inner_join(math, por, by = join_by,suffix=c(".math",".por"))
library(dplyr)
math_por <- inner_join(math, por, by = join_by,suffix=c(".math",".por"))
dim(math_por)
str(math_por)
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
alc <- select(math_por, one_of(join_by))
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
glimpse(alc)
write.table(alc,file = "data/alc.csv", sep = "\t")
alc <- read.table("data/alc.csv",header=T, sep="\t")
colnames(alc)
g2 <- ggplot(alc, aes(x = high_use, y = absences,col=absences))+facet_wrap("sex", scales = "free")
library(ggplot2)
g2 <- ggplot(alc, aes(x = high_use, y = absences,col=absences))+facet_wrap("sex", scales = "free")
g2
g2 <- ggplot(alc, aes(x = high_use, y = absences,col=sex))+facet_wrap(abscences, scales = "free")
g2 <- ggplot(alc, aes(x = high_use, y = absences,col=sex))+facet_wrap(absences, scales = "free")
g2 <- ggplot(alc, aes(x = high_use, y = absences,col=sex))+facet_wrap(failures, scales = "free")
g2 <- ggplot(alc, aes(x = high_use, y = absences,col=sex))+facet_wrap("failures", scales = "free")
g2
g2 <- ggplot(alc, aes(x = high_use, y = absences,col=sex))+facet_wrap("failures", scales = "free")
# define the plot as a boxplot and draw it
g2 + geom_boxplot() + ylab("absences")+ggtitle("Student absences by alcohol consumption and sex")
g2 <- ggplot(alc, aes(x = high_use, y = absences))
# define the plot as a boxplot and draw it
g2 + geom_boxplot() + ylab("absences")+ggtitle("Student absences by alcohol consumption")
# absences vs high_use
g1 <- ggplot(alc, aes(x = high_use, y = absences))
g1 + geom_boxplot() + ylab("absences")+ggtitle("Student absences by alcohol consumption")
# absences vs high_use
g2 <- ggplot(alc, aes(x = high_use, y = failures))
g2 + geom_boxplot() + ylab("failures")+ggtitle("Student failures by alcohol consumption")
# absences vs high_use
g3 <- ggplot(alc, aes(x = high_use, y = sex))
g3 + geom_boxplot() + ylab("freetime")+ggtitle("Student sex by alcohol consumption")
# absences vs high_use
g4 <- ggplot(alc, aes(x = high_use, y = freetime))
g4 + geom_boxplot() + ylab("freetime")+ggtitle("Student freetimes by alcohol consumption")
g2 <- ggplot(alc, aes(x = high_use, y = failures))
g2 + geom_bar() + ylab("failures")+ggtitle("Student failures by alcohol consumption")
g3 <- ggplot(alc, aes(x = high_use, fill = sex))
g3 + geom_boxplot() + ylab("freetime")+ggtitle("Student sex by alcohol consumption")
g3 <- ggplot(alc, aes(x = high_use, fill = sex))
g3 + geom_bar() + ylab("freetime")+ggtitle("Student sex by alcohol consumption")
g3 <- ggplot(alc, aes(x = high_use, fill = sex))
g3 + geom_bar() + ylab("sex")+ggtitle("Student sex by alcohol consumption")
g1 <- ggplot(alc, aes(x = high_use, y = absences))
g1 + geom_boxplot() + ylab("absences")+ggtitle("Student absences by alcohol consumption")
g2 <- ggplot(alc, aes(x = high_use, fill = failures))
g2 + geom_bar() + ylab("failures")+ggtitle("Student failures by alcohol consumption")
g2 <- ggplot(alc, aes(x = failures, fill = high_use))
g2 + geom_bar() + ylab("failures")+ggtitle("Student failures by alcohol consumption")
g4 <- ggplot(alc, aes(x = high_use, fill = freetime))
g4 + geom_bar() + ylab("freetime")+ggtitle("Student freetimes by alcohol consumption")
g4 <- ggplot(alc, aes(x = freetime, fill = high_use))
g4 + geom_bar() + ylab("freetime")+ggtitle("Student freetimes by alcohol consumption")
m <- glm(high_use ~ failures + absences+sex+freetime, data = alc, family = "binomial")
summary(mm)
summary(m)
coef(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
CI
cbind(OR, CI)
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)%>%prop.table()%>%addmargins
g <- ggplot(alc, aes(x = probability, y = high_use,col=prediction))
# define the geom as points and draw the plot
g+geom_point()
table(high_use = alc$high_use, prediction = alc$prediction)%>%prop.table()%>%addmargins
0.03926702+0.21989529
g <- ggplot(alc, aes(x = probability, y = high_use,col=prediction))
# define the geom as points and draw the plot
g+geom_point()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = 1)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
library(dplyr)
